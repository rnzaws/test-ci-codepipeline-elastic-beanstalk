FROM python:3.5-alpine

# https://www.caktusgroup.com/blog/2017/03/14/production-ready-dockerfile-your-python-django-app/

ADD requirements.txt /requirements.txt

RUN set -ex \
    && apk add --no-cache --virtual .build-deps gcc make libc-dev musl-dev linux-headers pcre-dev postgresql-dev \
    && pyvenv /venv \
    && /venv/bin/pip install -U pip \
    && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c "/venv/bin/pip install --no-cache-dir -r /requirements.txt" \
    && runDeps="$( \
            scanelf --needed --nobanner --recursive /venv | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' | sort -u | xargs -r apk info --installed | sort -u \
    )" \
    && apk add --virtual .python-rundeps $runDeps \
    && apk del .build-deps

RUN mkdir /code/
WORKDIR /code/
ADD app /code/

EXPOSE 8000

ENV DJANGO_SETTINGS_MODULE=app.settings

ENV UWSGI_VIRTUALENV=/venv UWSGI_WSGI_FILE=app/wsgi.py UWSGI_HTTP=:8000 UWSGI_MASTER=1 UWSGI_WORKERS=2 UWSGI_THREADS=8 UWSGI_UID=1000 UWSGI_GID=2000

RUN DATABASE_URL=none /venv/bin/python manage.py collectstatic --noinput

CMD ["/venv/bin/uwsgi", "--http-auto-chunked", "--http-keepalive"]
